set(THIS_PROJECT CryAudioImplWwise)

project( ${THIS_PROJECT} )

#START-FILE-LIST
# File List auto generated by waf2cmake.py, do not modify manually.

set (SourceGroup_HeaderFiles
	ATLEntities_wwise.h
	AudioSystemImplCVars.h
	AudioSystemImpl_wwise.h
	Common_wwise.h
	FileIOHandler_wwise.h
	resource.h
	stdafx.h
	stdafx.cpp
)
source_group("Header Files" FILES ${SourceGroup_HeaderFiles})


set (SourceGroup_Root
	stdafx.cpp
)
source_group("Root" FILES ${SourceGroup_Root})


set (SourceGroup_SourceFiles
	AudioSystemImplCVars.cpp
	AudioSystemImpl_wwise.cpp
	Common_wwise.cpp
	CryAudioImplWwise.cpp
	FileIOHandler_wwise.cpp
)
source_group("Source Files" FILES ${SourceGroup_SourceFiles})


# Support unity build with uber files
set(CryAudioImplWwise_uber_0_cpp ${SourceGroup_HeaderFiles} ${SourceGroup_SourceFiles}  )
enable_unity_build( "CryAudioImplWwise_uber_0.cpp" CryAudioImplWwise_uber_0_cpp )

set(NoUberFile ${SourceGroup_Root}  )


set (SOURCES
	${CryAudioImplWwise_uber_0_cpp}
	${NoUberFile}
)
#END-FILE-LIST

include_directories( ../../Common )
include_directories( ${CMAKE_CURRENT_SOURCE_DIR} )
include_directories( ${SDK_DIR}/Audio )
include_directories( ${SDK_DIR}/Audio/oggvorbis/inc )

if (DURANGO)
	link_directories( ${SDK_DIR}/Audio/AK/lib/xboxone )
elseif (WIN64)
	link_directories( "${SDK_DIR}/Audio/FmodEx/lib/x64/$(Configuration)/vc110" )
	link_directories( ${SDK_DIR}/Audio/AK/lib/x64/$(Configuration)/vc110 )
elseif (WIN32)
	link_directories( ${SDK_DIR}/Audio/FmodEx/lib/win32 )
	link_directories( ${SDK_DIR}/Audio/AK/lib/win32/$(Configuration)/vc110 )
endif()

add_definitions( -DWWISE_FOR_BLUBB )

add_library( ${THIS_PROJECT} ${SOURCES})
	if (DURANGO)
		target_link_libraries( ${THIS_PROJECT} ws2_32 )
	elseif (WIN32)
		target_link_libraries( ${THIS_PROJECT} dxguid ws2_32 Msacm32 )
		target_link_libraries( ${THIS_PROJECT} Dsound )
		target_link_libraries( ${THIS_PROJECT} XINPUT9_1_0 )
		
		## WWISE Libs
		set( WWISE_LIBS ${WWISE_LIBS} 
			AkMP3Source
			CommunicationCentral
			SFlib
		)
	endif()
	
	target_link_libraries( ${THIS_PROJECT} debug CommunicationCentral	)

	set( WWISE_LIBS ${WWISE_LIBS} 
		AkMemoryMgr
		AkMusicEngine
		AkSoundEngine
		AkStreamMgr
		
		#Plugins
		AkAudioInputSource
		AkCompressorFX
		AkConvolutionReverbFX
		AkDelayFX
		AkExpanderFX
		AkFlangerFX
		AkGainFX
		AkGuitarDistortionFX
		AkHarmonizerFX
		AkMatrixReverbFX
		AkMemoryMgr
		AkMeterFX
		AkParametricEQFX
		AkPeakLimiterFX
		AkPitchShifterFX
		AkRoomVerbFX
		AkSilenceSource
		AkSineSource
		AkSoundSeedImpactFX
		AkSoundSeedWind
		AkSoundSeedWoosh
		AkStereoDelayFX
		AkRumble
		AkMotionGenerator
		CrankcaseAudioREVModelPlayerFX
		AuroHeadphoneFX
		AuroPannerMixer
		
		AkSynthOne
		AkTimeStretchFX
		AkToneSource
		AkTremoloFX
		AkVorbisDecoder
		McDSPFutzBoxFX
		McDSPLimiterFX
		AstoundsoundExpanderFX
		AstoundsoundFolddownFX
		AstoundsoundRTIFX
		AstoundsoundShared
		
		iZHybridReverbFX
		iZTrashMultibandDistortionFX
		iZTrashDynamicsFX
		iZTrashDistortionFX
		iZTrashFiltersFX
		iZTrashBoxModelerFX
		iZTrashDelayFX
		iZTrashFiltersFX

		IOSONOProximityMixer
	)
	
	## WWISE Libs
	target_link_libraries( ${THIS_PROJECT} ${WWISE_LIBS} )


USE_MSVC_PRECOMPILED_HEADER( ${THIS_PROJECT} "stdafx.h" "stdafx.cpp" )

SET_PLATFORM_TARGET_PROPERTIES( ${THIS_PROJECT} )
