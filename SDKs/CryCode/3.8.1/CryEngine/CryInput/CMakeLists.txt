set(THIS_PROJECT CryInput)

project( ${THIS_PROJECT} )

#START-FILE-LIST
# File List auto generated by waf2cmake.py, do not modify manually.

set (SourceGroup_DX
	DXInput.cpp
	DXInput.h
	DXInputDevice.cpp
	DXInputDevice.h
	Keyboard.cpp
	Keyboard.h
	Mouse.cpp
	Mouse.h
)
source_group("DX" FILES ${SourceGroup_DX})


set (SourceGroup_DX_HeadmountedDevice
	HeadmountedDevice/HeadMountedDevice.cpp
	HeadmountedDevice/HeadMountedDevice.h
)
source_group("DX\\HeadmountedDevice" FILES ${SourceGroup_DX_HeadmountedDevice})


set (SourceGroup_Durango
	DurangoInput.cpp
	DurangoInput.h
	DurangoInputKeyboard.cpp
	DurangoInputKeyboard.h
)
source_group("Durango" FILES ${SourceGroup_Durango})


set (SourceGroup_Durango_Kinect
	KinectAudioWinRT.cpp
	KinectAudioWinRT.h
	KinectInputWinRT.cpp
	KinectInputWinRT.h
)
source_group("Durango\\Kinect" FILES ${SourceGroup_Durango_Kinect})


set (SourceGroup_Kinect
	KinectInput.cpp
	KinectInput.h
	KinectInputNULL.h
	KinectXboxSyncThread.cpp
	KinectXboxSyncThread.h
)
source_group("Kinect" FILES ${SourceGroup_Kinect})


set (SourceGroup_Kinect_Filters
	Filters/JointFilter.cpp
	Filters/JointFilter.h
)
source_group("Kinect\\Filters" FILES ${SourceGroup_Kinect_Filters})


set (SourceGroup_Linux
	LinuxInput.cpp
	LinuxInput.h
)
source_group("Linux" FILES ${SourceGroup_Linux})


set (SourceGroup_Orbis
	OrbisInput.cpp
	OrbisInput.h
	OrbisInputDevice.cpp
	OrbisInputDevice.h
	OrbisKeyboard.cpp
	OrbisKeyboard.h
	OrbisPad.cpp
	OrbisPad.h
	OrbisPadWin.cpp
	OrbisPadWin.h
)
source_group("Orbis" FILES ${SourceGroup_Orbis})


set (SourceGroup_Root
	CryInput.cpp
	CryInput.h
	InputCVars.cpp
	InputCVars.h
	StdAfx.cpp
	StdAfx.h
	StdAfx.cpp
	resource.h
)
source_group("Root" FILES ${SourceGroup_Root})


set (SourceGroup_SDL
	SDLKeyboard.cpp
	SDLKeyboard.h
	SDLMouse.cpp
	SDLMouse.h
	SDLPad.cpp
	SDLPad.h
)
source_group("SDL" FILES ${SourceGroup_SDL})


set (SourceGroup_Shared
	BaseInput.cpp
	BaseInput.h
	DurangoInputDevice.cpp
	DurangoInputDevice.h
	InputDevice.cpp
	InputDevice.h
	XInputDevice.cpp
	XInputDevice.h
)
source_group("Shared" FILES ${SourceGroup_Shared})


set (SourceGroup_Synergy
	Synergy/SynergyContext.cpp
	Synergy/SynergyContext.h
	Synergy/SynergyKeyboard.cpp
	Synergy/SynergyKeyboard.h
	Synergy/SynergyMouse.cpp
	Synergy/SynergyMouse.h
)
source_group("Synergy" FILES ${SourceGroup_Synergy})


set (SourceGroup_TrackIR
	NaturalPointInputNULL.h
)
source_group("TrackIR" FILES ${SourceGroup_TrackIR})


# Support unity build with uber files
set(CryInput_Uber_0_cpp ${SourceGroup_DX} ${SourceGroup_DX_HeadmountedDevice} ${SourceGroup_Durango} ${SourceGroup_Durango_Kinect} ${SourceGroup_Kinect} ${SourceGroup_Kinect_Filters} ${SourceGroup_Linux} ${SourceGroup_Orbis} ${SourceGroup_Root} ${SourceGroup_SDL} ${SourceGroup_Shared} ${SourceGroup_Synergy} ${SourceGroup_TrackIR}  )
enable_unity_build( "CryInput_Uber_0.cpp" CryInput_Uber_0_cpp )

set(NoUberFile  )


set (SOURCES
	${CryInput_Uber_0_cpp}
	${NoUberFile}
)
#END-FILE-LIST


include_directories( ${CMAKE_CURRENT_SOURCE_DIR} )
include_directories( ${SDK_DIR}/OrbisPad/include )

add_library( ${THIS_PROJECT} ${SOURCES})

if (DURANGO)
	target_link_libraries( ${THIS_PROJECT} uuid ws2_32 )
elseif (WIN64)
	target_link_libraries( ${THIS_PROJECT} dxguid dinput8 )
	target_link_libraries( ${THIS_PROJECT} ${WINSDK_SDK_LIB_DIR}/x64/XINPUT9_1_0.lib )
	
	if (MSVC_VERSION GREATER 1700)
		target_link_libraries( ${THIS_PROJECT} debug     ${SDK_DIR}/OrbisPad/lib/Debug/libScePad_static_debug_vs2013_md.lib )
		target_link_libraries( ${THIS_PROJECT} optimized ${SDK_DIR}/OrbisPad/lib/Release/libScePad_static_vs2013_md.lib )
	endif()
	if (MSVC_VERSION EQUAL 1700)
		target_link_libraries( ${THIS_PROJECT} debug     ${SDK_DIR}/OrbisPad/lib/Debug/libScePad_static_debug_vs2012_md.lib )
		target_link_libraries( ${THIS_PROJECT} optimized ${SDK_DIR}/OrbisPad/lib/Release/libScePad_static_vs2012_md.lib )
	endif()
	if (MSVC_VERSION EQUAL 1600)
		target_link_libraries( ${THIS_PROJECT} debug     ${SDK_DIR}/OrbisPad/lib/Debug/libScePad_static_debug_vs2010_md.lib )
		target_link_libraries( ${THIS_PROJECT} optimized ${SDK_DIR}/OrbisPad/lib/Release/libScePad_static_vs2010_md.lib )
	endif()
	
elseif (WIN32)
	target_link_libraries( ${THIS_PROJECT} dxguid dinput8 )
	target_link_libraries( ${THIS_PROJECT} ${WINSDK_SDK_LIB_DIR}/x86/XINPUT9_1_0.lib )
endif()

USE_MSVC_PRECOMPILED_HEADER( ${THIS_PROJECT} "StdAfx.h" "StdAfx.cpp" )

SET_PLATFORM_TARGET_PROPERTIES( ${THIS_PROJECT} )